---
- name: Update and Register Managed Hosts
  hosts: all
  become: true

  vars_files:
    - vars/main.yml
  tasks:
    - name: Ensure subscription-manager is installed
      ansible.builtin.dnf:
        name: subscription-manager
        state: present

    - name: Register with Red Hat Subscription Manager
      community.general.redhat_subscription:
        state: present
        username: "{{ rhsm_username }}"
        password: "{{ rhsm_password }}"
        auto_attach: true
      register: rhsm_register
      until: rhsm_register is success
      retries: 3
      delay: 10

    - name: Update all packages
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: true

    - name: Reboot the system if required
      ansible.builtin.reboot:
        msg: "Rebooting due to system updates"
        reboot_timeout: 600
      when: ansible_pkg_mgr == 'yum' and ansible_yum.updates | default([]) | length > 0

    - name: Ensure the system is properly configured
      ansible.builtin.assert:
        that:
          - ansible_distribution == 'RedHat'
          - ansible_distribution_major_version == '8'
        msg: "This playbook is designed for RHEL 8 systems"

- name: Configure Infra Nodes
  hosts: infra
  become: true

  tasks:
    - name: Install required packages
      ansible.builtin.dnf:
        name:
          - wget
          - tar
        state: present

    - name: Download Prometheus
      ansible.builtin.get_url:
        url: https://github.com/prometheus/prometheus/releases/download/v2.37.0/prometheus-2.37.0.linux-amd64.tar.gz
        dest: /tmp/prometheus.tar.gz

    - name: Extract Prometheus
      ansible.builtin.unarchive:
        src: /tmp/prometheus.tar.gz
        dest: /opt
        remote_src: true

    - name: Create Prometheus system group
      ansible.builtin.group:
        name: prometheus
        system: true
        state: present

    - name: Create Prometheus system user
      ansible.builtin.user:
        name: prometheus
        system: true
        group: prometheus
        createhome: false
        shell: /sbin/nologin

    - name: Create Prometheus directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Copy Prometheus binary
      ansible.builtin.copy:
        src: /opt/prometheus-2.37.0.linux-amd64/prometheus
        dest: /usr/local/bin/prometheus
        owner: prometheus
        group: prometheus
        mode: '0755'
        remote_src: true

    - name: Copy Prometheus configuration
      ansible.builtin.copy:
        src: /opt/prometheus-2.37.0.linux-amd64/prometheus.yml
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
        remote_src: true

    - name: Create Prometheus systemd service
      ansible.builtin.template:
        src: prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        mode: '0644'

    - name: Start and enable Prometheus service
      ansible.builtin.systemd:
        name: prometheus
        state: started
        enabled: true
        daemon_reload: true

    - name: Download Alertmanager
      ansible.builtin.get_url:
        url: https://github.com/prometheus/alertmanager/releases/download/v0.24.0/alertmanager-0.24.0.linux-amd64.tar.gz
        dest: /tmp/alertmanager.tar.gz

    - name: Extract Alertmanager
      ansible.builtin.unarchive:
        src: /tmp/alertmanager.tar.gz
        dest: /opt
        remote_src: true

    - name: Create Alertmanager system group
      ansible.builtin.group:
        name: alertmanager
        system: true
        state: present

    - name: Create Alertmanager system user
      ansible.builtin.user:
        name: alertmanager
        system: true
        group: alertmanager
        createhome: false
        shell: /sbin/nologin

    - name: Create Alertmanager directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: alertmanager
        group: alertmanager
        mode: '0755'
      loop:
        - /etc/alertmanager
        - /var/lib/alertmanager

    - name: Copy Alertmanager binary
      ansible.builtin.copy:
        src: /opt/alertmanager-0.24.0.linux-amd64/alertmanager
        dest: /usr/local/bin/alertmanager
        owner: alertmanager
        group: alertmanager
        mode: '0755'
        remote_src: true

    - name: Copy Alertmanager configuration
      ansible.builtin.copy:
        src: /opt/alertmanager-0.24.0.linux-amd64/alertmanager.yml
        dest: /etc/alertmanager/alertmanager.yml
        owner: alertmanager
        group: alertmanager
        mode: '0644'
        remote_src: true

    - name: Create Alertmanager systemd service
      ansible.builtin.template:
        src: alertmanager.service.j2
        dest: /etc/systemd/system/alertmanager.service
        mode: '0644'

    - name: Start and enable Alertmanager service
      ansible.builtin.systemd:
        name: alertmanager
        state: started
        enabled: true
        daemon_reload: true

# Web Hosts
- name: Configure Web Hosts
  hosts: web
  become: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Install Nginx
      ansible.builtin.dnf:
        name: nginx
        state: present

    - name: Create a simple hello page
      ansible.builtin.copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
            <title>Hello from {{ inventory_hostname }}</title>
          </head>
          <body>
            <h1>Hello from {{ inventory_hostname }}</h1>
            <p>This is a simple hello page for the EDA Monitoring Demo.</p>
          </body>
          </html>
        dest: /usr/share/nginx/html/index.html
        mode: '0644'

    - name: Copy Nginx configuration
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'
      notify: Reload Nginx

    - name: Ensure NGINX log directory has correct permissions
      ansible.builtin.file:
        path: /var/log/nginx
        state: directory
        mode: '0755'
        owner: nginx
        group: nginx

    - name: Ensure NGINX log files have correct permissions
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        mode: '0644'
        owner: nginx
        group: nginx
      loop:
        - /var/log/nginx/access.log
        - /var/log/nginx/error.log

    - name: Update NGINX logrotate configuration
      ansible.builtin.blockinfile:
        path: /etc/logrotate.d/nginx
        block: |
          /var/log/nginx/*.log {
              daily
              missingok
              rotate 14
              compress
              delaycompress
              notifempty
              create 0644 nginx nginx
              sharedscripts
              postrotate
                  /bin/kill -USR1 `cat /run/nginx.pid 2>/dev/null` 2>/dev/null || true
              endscript
          }
        create: true
        mode: '0644'

    - name: Add Datadog Agent user to NGINX group
      ansible.builtin.user:
        name: dd-agent
        groups: nginx
        append: true

    - name: Create Datadog NGINX configuration directory
      ansible.builtin.file:
        path: /etc/datadog-agent/conf.d/nginx.d
        state: directory
        mode: '0755'

    - name: Create Datadog NGINX configuration file
      ansible.builtin.template:
        src: datadog_nginx_conf.yaml.j2
        dest: /etc/datadog-agent/conf.d/nginx.d/conf.yaml
        mode: '0644'
      notify: Restart Datadog Agent

    - name: Import the Datadog Agent role
      ansible.builtin.import_role:
        name: datadog.dd.agent
      vars:
        datadog_enabled: true
        datadog_api_key: "{{ vault_datadog_api_key }}"
        datadog_site: "{{ vault_datadog_site }}"
        datadog_config:
          tags:
            - "project:eda-monitoring-demo"
            - "role:web"
          logs_enabled: true
          apm_config:
            enabled: true
        datadog_additional_packages:
          - dd-check-nginx

    - name: Start and enable Nginx
      ansible.builtin.systemd:
        name: nginx
        state: started
        enabled: true

    - name: Restart Datadog Agent to apply group changes
      ansible.builtin.systemd:
        name: datadog-agent
        state: restarted

  handlers:
    - name: Reload Nginx
      ansible.builtin.systemd:
        name: nginx
        state: reloaded

    - name: Restart Datadog Agent
      ansible.builtin.systemd:
        name: datadog-agent
        state: restarted

- name: Create Datadog Monitor for Web Instance Availability
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - vars/main.yml

  tasks:
    - name: Create Datadog monitor for web instance availability
      community.general.datadog_monitor:
        api_host: "https://api.{{ vault_datadog_site }}"
        api_key: "{{ vault_datadog_api_key }}"
        app_key: "{{ vault_datadog_app_key }}"
        state: present
        name: "Web Instance Availability"
        type: "service check"
        query: '"datadog.agent.up".over("role:web").by("host").last(2).count_by_status()'
        notification_message: "Web instance {{ '{{host.name}}' }} is not reporting to Datadog."
        notify_no_data: true
        thresholds:
          critical: 1
          ok: 1
          warning: 1
        tags:
          - "project:eda-monitoring-demo"
          - "role:web"
