---
- name: Remediate Nginx Service
  hosts: all
  become: true
  gather_facts: false

  vars_files:
    - vars/main.yml

  tasks:
    - name: Create ServiceNow Incident
      servicenow.itsm.incident:
        instance:
          host: "{{ servicenow_instance }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        state: new
        caller: "admin"
        short_description: "[ALERT] Nginx Service Down"
        description: |
          DataDog has reported that the Nginx service is not running on {{ inventory_hostname }}.

          Alert details:
          - Monitor Name: Nginx Service Check
          - Host: {{ inventory_hostname }}
          - Alert Status: {{ alert_status }}
          - Triggered at: {{ alert_timestamp }}
          - Last check: {{ alert_last_updated }}

          Error: The Nginx process is not running or is unresponsive.

          Potential impact:
          - Web services may be unavailable
          - Incoming HTTP requests may fail
          - Load balancing could be affected

          This alert requires immediate attention.
          Automated remediation has been initiated.

          Alert ID: {{ alert_id }}
          DataDog Alert Link: {{ alert_link }}

        impact: "high"
        urgency: "high"
        other:
          comments: "Alert received by Red Hat EDA, triaging the issue"
      register: snow_incident
      tags:
        - servicenow

    - name: Check Nginx service status
      ansible.builtin.service:
        name: nginx
        state: started
      register: nginx_status
      ignore_errors: true

    - name: Start Nginx service if it's down
      ansible.builtin.service:
        name: nginx
        state: started
      when: nginx_status.failed

    - name: Verify Nginx service is running
      ansible.builtin.service:
        name: nginx
        state: started
      register: nginx_verification

    - name: Update ServiceNow Incident - Remediation Successful
      servicenow.itsm.incident:
        instance:
          host: "{{ servicenow_instance }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        state: resolved
        number: "{{ snow_incident.record.number }}"
        close_code: "Solved (Permanently)"
        close_notes: "[RESOLVED] Nginx Service Restored on {{ inventory_hostname }}"
        other:
          work_notes: |
            Remediation Actions Taken:
              1. Ansible Automation Platform triggered remediation playbook
              2. Playbook attempted to restart Nginx service
              3. Nginx service successfully restarted
              4. Service health check confirmed Nginx is running and responding
          comments: |
            The Nginx service issue on {{ inventory_hostname }} has been successfully resolved through automated remediation by Ansible Automation Platform.

            Current Status:
            - Nginx service is up and running
            - Web services are fully operational
            - Load balancing functionality restored

            Additional Notes:
            - No data loss or persistent issues detected
            - System performance has returned to normal levels
            - Root cause analysis will be conducted to prevent future occurrences

            Automated Response Summary:
            - Alert detected by DataDog
            - Event-Driven Automation (EDA) initiated response
            - Ansible Automation Platform executed remediation
            - ServiceNow incident automatically updated and resolved

            Alert ID: {{ alert_id }}
            DataDog Alert Link: {{ alert_link }}

            Ansible Job ID: {{ tower_job_id }}
            Ansible Automation Platform Link: https://controller.sandbox3015.opentlc.com/#/jobs/playbook/{{ tower_job_id }}/output

            This incident has been automatically resolved. No further immediate action is required.
      when: nginx_verification.state == "started"
      tags:
        - servicenow

    - name: Update ServiceNow Incident - Remediation Failed
      servicenow.itsm.incident:
        instance:
          host: "{{ servicenow_instance }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        state: in_progress
        number: "{{ snow_incident.record.number }}"
        other:
          work_notes: |
            [ALERT] Remediation Failed: Nginx Service Still Down on {{ inventory_hostname }}

            The automated remediation attempt for the Nginx service issue on {{ inventory_hostname }} has failed. Manual intervention is required.

            Incident Details:
            - Host: {{ inventory_hostname }}
            - Service: Nginx
            - Initial Alert Time: 2023-09-17 15:23:45 UTC
            - Remediation Attempt Time: 2023-09-17 15:25:30 UTC
            - Current Status: Service still down
            - Time Since Initial Alert: 30 minutes

            Failed Remediation Actions:
            1. Ansible Automation Platform triggered remediation playbook
            2. Playbook attempted to restart Nginx service
            3. Nginx service failed to start
            4. Additional restart attempts were unsuccessful

            Current System State:
            - Nginx service is not running
            - Web services are unavailable
            - Load balancing is affected

            Impact:
            - Customer-facing web applications are inaccessible
            - Potential loss of incoming requests
            - Increased load on other server instances

            Next Steps:
            1. Escalating to on-call DevOps team for immediate manual intervention
            2. Initiating secondary failover procedures
            3. Preparing customer communication for extended outage

            Troubleshooting Information:

            Alert ID: {{ alert_id }}
            DataDog Alert Link: {{ alert_link }}

            Ansible Job ID: {{ tower_job_id }}
            Ansible Automation Platform Link: https://controller.sandbox3015.opentlc.com/#/jobs/playbook/{{ tower_job_id }}/output

            URGENT: Immediate action required. Please acknowledge this alert and update the incident status.
      when: nginx_verification.state != "started"

    - name: Send notification if remediation was successful
      ansible.builtin.debug:
        msg: "Nginx service on {{ inventory_hostname }} has been successfully started."
      when: nginx_verification.state == "started"

    - name: Send alert if remediation failed
      ansible.builtin.debug:
        msg: "Failed to start Nginx service on {{ inventory_hostname }}. Manual intervention required."
      when: nginx_verification.state != "started"

#    - name: Update Datadog event with remediation status
#      community.general.datadog_event:
#        api_key: "{{ vault_datadog_api_key }}"
#        app_key: "{{ vault_datadog_app_key }}"
#        title: "Nginx Remediation on {{ inventory_hostname }}"
#        text: >
#          {% if nginx_verification.state == "started" %}
#          Nginx service on {{ inventory_hostname }} has been successfully started.
#          {% else %}
#          Failed to start Nginx service on {{ inventory_hostname }}. Manual intervention required.
#          {% endif %}
#          Alert details: {{ alert_title }}
#          Alert triggered at: {{ alert_timestamp | int | to_datetime }}
#        alert_type: "{{ 'success' if nginx_verification.state == 'started' else 'error' }}"
#        date_happened: "{{ ansible_date_time.epoch | int }}"
#        host: "{{ inventory_hostname }}"
#        tags:
#          - "project:eda-monitoring-demo"
#          - "role:web"
#          - "service:nginx"
